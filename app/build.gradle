plugins {
    //应用主入口标示
    id 'com.android.application'
    //Kotlin Android扩展插件
    id 'kotlin-android'
    //Kotlin Android扩展插件可以节省findviewbyid(),实现与Data-Binding,Dagger框架的效果，不需要添加任何额外代码，也不影响任何运行时体验。
    id 'kotlin-android-extensions'
    //Kotlin Android注解处理器插件
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.callback.watch"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            // No debug config
        }
        release {
            storeFile file("../constant.jks")
            storePassword "con20200705"
            keyAlias "constant"
            keyPassword "con20200705"
        }
    }

    buildTypes {

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // 是否显示Log
            buildConfigField "boolean", "SHOW_LOG", "true"
            signingConfig signingConfigs.release
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // 是否显示Log
            buildConfigField "boolean", "SHOW_LOG", "true"
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    //kotlin语言标准库
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    //一组 Kotlin 扩展程序
    //Android KTX 旨在让您利用 Kotlin 语言功能（例如扩展函数/属性、lambda、命名参数和参数默认值），
    //以更简洁、更愉悦、更惯用的方式使用 Kotlin 进行 Android 开发。
    implementation 'androidx.core:core-ktx:1.3.2'
    //Android 官方兼容支持库
    implementation 'androidx.appcompat:appcompat:1.2.0'
    //Android 官方material风格支持库
    implementation 'com.google.android.material:material:1.2.1'
    //Android 官方约束布局支持库
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    //Android 官方推荐架构组件Navigation 让单 Activity 应用成为首选架构，更好的管理Fragment框架库
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.2'
    //内部测试支持库
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //沉浸式状态栏和沉浸式导航栏管理
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'

    //Jetpack -- Room数据库组件
    implementation 'androidx.room:room-runtime:2.2.5'
    kapt 'androidx.room:room-compiler:2.2.5'

    //Jetpack -- lifecycle生命周期感知型组件
    //这样，组件便能够在其内部管理自己的生命周期，从而降低模块间的耦合度，并降低内存泄漏发生的可能性
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'

}